#
# Tmux configuration
#
# Inspiration taken from:
# - https://github.com/skwp/dotfiles/blob/master/tmux/tmux.conf
# - https://github.com/gpakosz/.tmux/blob/master/.tmux.conf
# - http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#

# Use vi-style key binds
set-option -g status-keys vi
set-window-option -g mode-keys vi

# Rebind action key to ctrl-w
set -g prefix C-w
unbind C-b
bind C-w send-prefix

# Aliases for window splitting
bind | split-window -h -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'

# Add shortcuts for copy/pasting to/from xclip
##Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
##Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# General terminal settings
set -g default-terminal "screen-256color"
setw -g utf8 on
set -g history-limit 5000
# Start counting windows from 1 (left side of keyboard)
set -g base-index 1 
setw -g pane-base-index 1

# Only use repeated keypresses as commands if they're done within Xms after doing to
# first action
#set -g repeat-time 800
set -g repeat-time 250

# No delay for escape key press
set -sg escape-time 0

# Notify on activity and bells
set -g bell-action any
#set -g visual-bell on
setw -g monitor-activity off
set -g visual-activity off

#set -g visual-activity off # no flashy messages in my status line please!  (watch the window attrs '#-*!+' instead)
#set -g visual-content off # idem

# Disable mouse interactions
setw -g mode-mouse off # on prevents mouse select on the terminal
set -g mouse-select-pane off # on prevents mouse select in panes

# Window titles + automatic rename to application running
set -g set-titles on
setw -g automatic-rename on

# Window movement
# Select windows with ctrl-#
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 0

# Shift arrow to switch windows
bind -n S-Left previous-window
bind -n S-Right next-window

# Pane movement
# Switch panes without using the prefix key (alt+arrow)
bind -n C-Left select-pane -L
bind -n C-Right select-pane -R
bind -n C-Up select-pane -U
bind -n C-Down select-pane -D

# Session management
bind n new-session

# Use UTF-8 for status bar
set -g status-utf8 on

# Add hostname, load and time to status bar
set -g status-right '#[fg=blue,bold]#H#[default] #[fg=green]» #[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg) #[fg=green]» #[fg=cyan]#S#[default] #[fg=green]» #[fg=colour243]%R#[default]'

# Colors
set -g message-bg black
set -g message-fg green
set -g status-bg colour234 # Dark grey
set -g status-fg green
setw -g window-status-bg black
setw -g window-status-fg colour243 # Grey
setw -g window-status-current-bg black
setw -g window-status-current-fg white
# Window with activity color
set-window-option -g window-status-activity-bg yellow
set-window-option -g window-status-activity-fg black

# For Mac OS X -- reattach something so copy/pasting works
if 'which -s reattach-to-user-namespace' 'set -g default-command "tmux rename-window initializing; tmux set -w automatic-rename; reattach-to-user-namespace $SHELL -l"'

# Copy to Mac OS X pasteboard when using tmux's copy mode
if 'which -s reattach-to-user-namespace' 'bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"'
if 'which -s reattach-to-user-namespace' 'unbind -t vi-copy Enter; bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"'

# Sessions
# would open 2 windows, the second of which would be named foo/bar and would be
# split vertically in half (50%) with foo running above bar. Focus would be in
# window 2 (foo/bar), top pane (foo).
# 
# new  -s SessionName -n WindowName Command
# neww -n foo/bar foo
# splitw -v -p 50 -t 0 bar
# selectw -t 1 
# selectp -t 0

# Load local settings (if present)
if 'test -f ~/.tmux.local.conf' 'source-file ~/.tmux.local.conf' '' 

# Create a session when none is available (so we can always use tmux attach)
if "tmux has-session -t 0" "" "new-session -n 0"
